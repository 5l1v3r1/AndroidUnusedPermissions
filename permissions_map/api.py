#!/usr/bin/env python
#-*- coding: utf-8 -*-

#API Permission Map

API_PERMISSION_MAP = {
	'android.permission.CHANGE_WIFI_STATE':[
		('Landroid/net/wifi/WifiManager', 'reassociate'), 
		('Landroid/net/wifi/WifiManager', 'startScan'), 
		('Landroid/net/wifi/WifiManager', 'setCountryCode'), 
		('Landroid/net/ConnectivityManager', 'startUsingNetworkFeature'), 
		('Landroid/net/wifi/WifiManager', 'disableNetwork'), 
		('Landroid/net/wifi/WifiManager', 'updateNetwork'), 
		('Landroid/net/wifi/WifiManager', 'removeNetwork'), 
		('Landroid/net/wifi/WifiManager', 'reconnect'), 
		('Landroid/net/wifi/WifiManager', 'addNetwork'), 
		('Landroid/net/wifi/p2p/WifiP2pManager', 'initialize'), 
		('Landroid/net/wifi/WifiManager', 'enableNetwork'), 
		('Landroid/net/wifi/WifiManager', 'disconnect'), 
		('Landroid/net/wifi/WifiManager', 'setWifiEnabled'), 
		('Landroid/net/ConnectivityManager', 'setNetworkPreference'), 
		('Landroid/net/wifi/WifiManager', 'saveConfiguration'), 
		('Landroid/net/ConnectivityManager', 'stopUsingNetworkFeature'), 
		('Landroid/net/wifi/WifiManager', 'initialize'), 
	],
	'android.permission.READ_PHONE_STATE':[
		('Landroid/telephony/TelephonyManager', 'getSubscriberId'), 
		('Landroid/telephony/TelephonyManager', 'getDeviceSoftwareVersion'), 
		('Landroid/telephony/TelephonyManager', 'listen'), 
		('Landroid/telephony/TelephonyManager', 'getLine1Number'), 
		('Landroid/telephony/TelephonyManager', 'getSimSerialNumber'), 
		('Landroid/net/ConnectivityManager', 'startUsingNetworkFeature'), 
		('Landroid/telephony/TelephonyManager', 'getVoiceMailAlphaTag'), 
		('Landroid/telephony/TelephonyManager', 'getVoiceMailNumber'), 
		('Landroid/telephony/TelephonyManager', 'getDeviceId'), 
	],
	'android.permission.WRITE_CONTACTS':[
		('Landroid/provider/Contacts$People', 'markAsContacted'), 
		('Landroid/provider/Contacts$ContactMethods', 'addPostalLocation'), 
		('Landroid/widget/QuickContactBadge', 'assignContactFromPhone'), 
		('Landroid/provider/ContactsContract$ProfileSyncState', 'get'), 
		('Landroid/provider/Contacts$People', 'queryGroups'), 
		('Landroid/provider/ContactsContract$ProfileSyncState', 'newSetOperation'), 
		('Landroid/provider/ContactsContract$SyncState', 'set'), 
		('Landroid/provider/ContactsContract$RawContacts', 'getContactLookupUri'), 
		('Landroid/provider/Contacts$People', 'createPersonInMyContactsGroup'), 
		('Landroid/provider/Contacts$People', 'addToGroup'), 
		('Landroid/provider/Contacts$People', 'addToMyContactsGroup'), 
		('Landroid/provider/ContactsContract$SyncState', 'getWithUri'), 
		('Landroid/provider/Contacts$Settings', 'setSetting'), 
		('Landroid/provider/ContactsContract$SyncState', 'newSetOperation'), 
		('Landroid/provider/ContactsContract$Contacts', 'getLookupUri'), 
		('Landroid/provider/ContactsContract$Contacts', 'markAsContacted'), 
		('Landroid/provider/ContactsContract$ProfileSyncState', 'getWithUri'), 
		('Landroid/widget/QuickContactBadge', 'onClick'), 
		('Landroid/provider/ContactsContract$SyncState', 'get'), 
		('Landroid/widget/QuickContactBadge', 'assignContactFromEmail'), 
		('Landroid/provider/ContactsContract$Contacts', 'getLookupUri'), 
		('Landroid/provider/ContactsContract$ProfileSyncState', 'set'), 
		('Landroid/provider/Contacts$Settings', 'getSetting'), 
		('Landroid/provider/Contacts$People', 'addToGroup'), 
		('Landroid/provider/ContactsContract$Directory', 'notifyDirectoryChange'), 
		('Landroid/provider/ContactsContract$Data', 'getContactLookupUri'), 
	],
	'android.permission.GET_TASKS':[
		('Landroid/app/ActivityManager', 'getRecentTasks'), 
		('Landroid/app/ActivityManager', 'getRunningTasks'), 
		('Landroid/app/ActivityManager', 'getRunningTasks'), 
	],
	'android.permission.CHANGE_WIFI_MULTICAST_STATE':[
		('Landroid/net/wifi/WifiManager$MulticastLock', 'release'), 
		('Landroid/net/wifi/WifiManager$MulticastLock', 'acquire'), 
		('Landroid/net/wifi/WifiManager$MulticastLock', 'finalize'), 
	],
	'android.permission.NFC':[
		('Landroid/nfc/tech/IsoDep', 'transceive'), 
		('Landroid/nfc/tech/MifareClassic', 'writeBlock'), 
		('Landroid/nfc/NfcAdapter', 'setOnNdefPushCompleteCallback'), 
		('Landroid/nfc/tech/NfcA', 'transceive'), 
		('Landroid/nfc/tech/NfcB', 'close'), 
		('Landroid/nfc/NfcAdapter', 'enableForegroundDispatch'), 
		('Landroid/nfc/tech/MifareUltralight', 'transceive'), 
		('Landroid/nfc/tech/NfcA', 'getTimeout'), 
		('Landroid/nfc/tech/NfcB', 'connect'), 
		('Landroid/nfc/tech/MifareClassic', 'transceive'), 
		('Landroid/nfc/tech/NfcV', 'close'), 
		('Landroid/nfc/tech/MifareUltralight', 'connect'), 
		('Landroid/nfc/NfcAdapter', 'setNdefPushMessage'), 
		('Landroid/nfc/tech/MifareClassic', 'increment'), 
		('Landroid/nfc/tech/BasicTagTechnology', 'close'), 
		('Landroid/nfc/NfcAdapter', 'setBeamPushUrisCallback'), 
		('Landroid/nfc/tech/Ndef', 'close'), 
		('Landroid/nfc/tech/Ndef', 'reconnect'), 
		('Landroid/nfc/tech/MifareClassic', 'transfer'), 
		('Landroid/nfc/tech/NdefFormatable', 'close'), 
		('Landroid/nfc/tech/MifareClassic', 'authenticateSectorWithKeyB'), 
		('Landroid/nfc/tech/NfcF', 'reconnect'), 
		('Landroid/nfc/NfcAdapter', 'setNdefPushMessageCallback'), 
		('Landroid/nfc/tech/MifareUltralight', 'writePage'), 
		('Landroid/nfc/tech/NfcF', 'getTimeout'), 
		('Landroid/nfc/tech/NdefFormatable', 'transceive'), 
		('Landroid/nfc/tech/BasicTagTechnology', 'reconnect'), 
		('Landroid/nfc/tech/MifareClassic', 'close'), 
		('Landroid/nfc/tech/Ndef', 'getNdefMessage'), 
		('Landroid/nfc/tech/MifareUltralight', 'setTimeout'), 
		('Landroid/nfc/tech/MifareClassic', 'restore'), 
		('Landroid/nfc/tech/NfcB', 'transceive'), 
		('Landroid/nfc/tech/MifareUltralight', 'getTimeout'), 
		('Landroid/nfc/tech/MifareClassic', 'readBlock'), 
		('Landroid/nfc/tech/NfcA', 'reconnect'), 
		('Landroid/nfc/tech/NfcV', 'connect'), 
		('Landroid/nfc/tech/NfcF', 'close'), 
		('Landroid/nfc/tech/NfcF', 'setTimeout'), 
		('Landroid/nfc/NfcAdapter', 'disableForegroundDispatch'), 
		('Landroid/nfc/tech/NdefFormatable', 'format'), 
		('Landroid/nfc/tech/NdefFormatable', 'reconnect'), 
		('Landroid/nfc/tech/IsoDep', 'getTimeout'), 
		('Landroid/nfc/tech/BasicTagTechnology', 'connect'), 
		('Landroid/nfc/tech/NdefFormatable', 'formatReadOnly'), 
		('Landroid/nfc/NfcAdapter', 'setBeamPushUris'), 
		('Landroid/nfc/tech/MifareClassic', 'authenticate'), 
		('Landroid/nfc/tech/MifareClassic', 'transceive'), 
		('Landroid/nfc/tech/MifareClassic', 'setTimeout'), 
		('Landroid/nfc/tech/MifareUltralight', 'close'), 
		('Landroid/nfc/tech/BasicTagTechnology', 'transceive'), 
		('Landroid/nfc/tech/IsoDep', 'transceive'), 
		('Landroid/nfc/tech/Ndef', 'writeNdefMessage'), 
		('Landroid/nfc/tech/MifareClassic', 'getTimeout'), 
		('Landroid/nfc/tech/Ndef', 'transceive'), 
		('Landroid/nfc/tech/Ndef', 'makeReadOnly'), 
		('Landroid/nfc/tech/NfcB', 'reconnect'), 
		('Landroid/nfc/tech/MifareClassic', 'reconnect'), 
		('Landroid/nfc/tech/MifareUltralight', 'transceive'), 
		('Landroid/nfc/tech/NfcA', 'close'), 
		('Landroid/nfc/tech/NfcA', 'setTimeout'), 
		('Landroid/nfc/NfcAdapter', 'enableForegroundNdefPush'), 
		('Landroid/nfc/tech/IsoDep', 'setTimeout'), 
		('Landroid/nfc/tech/IsoDep', 'close'), 
		('Landroid/nfc/tech/NfcV', 'reconnect'), 
		('Landroid/nfc/tech/NfcB', 'transceive'), 
		('Landroid/nfc/tech/MifareUltralight', 'readPages'), 
		('Landroid/nfc/tech/IsoDep', 'connect'), 
		('Landroid/nfc/tech/IsoDep', 'reconnect'), 
		('Landroid/nfc/tech/NdefFormatable', 'connect'), 
		('Landroid/nfc/tech/Ndef', 'connect'), 
		('Landroid/nfc/tech/MifareClassic', 'decrement'), 
		('Landroid/nfc/tech/NfcV', 'transceive'), 
		('Landroid/nfc/tech/NfcF', 'transceive'), 
		('Landroid/nfc/tech/MifareUltralight', 'reconnect'), 
		('Landroid/nfc/tech/NfcA', 'connect'), 
		('Landroid/nfc/tech/MifareClassic', 'connect'), 
		('Landroid/nfc/tech/MifareClassic', 'authenticateSectorWithKeyA'), 
		('Landroid/nfc/tech/NdefFormatable', 'format'), 
		('Landroid/nfc/tech/NfcV', 'transceive'), 
		('Landroid/nfc/tech/NfcA', 'transceive'), 
		('Landroid/nfc/tech/NfcF', 'connect'), 
		('Landroid/nfc/NfcAdapter', 'disableForegroundNdefPush'), 
		('Landroid/nfc/tech/NfcF', 'transceive'), 
	],
	'android.permission.ACCESS_WIFI_STATE':[
		('Landroid/net/wifi/WifiManager', 'getScanResults'), 
		('Landroid/net/wifi/p2p/WifiP2pManager', 'initialize'), 
		('Landroid/net/wifi/WifiManager', 'getDhcpInfo'), 
		('Landroid/net/wifi/WifiManager', 'pingSupplicant'), 
		('Landroid/net/wifi/WifiManager', 'isWifiEnabled'), 
		('Landroid/net/ConnectivityManager', 'startUsingNetworkFeature'), 
		('Landroid/net/wifi/WifiManager', 'getConnectionInfo'), 
		('Landroid/net/wifi/WifiManager', 'initialize'), 
		('Landroid/net/wifi/WifiManager', 'getWifiState'), 
		('Landroid/net/wifi/WifiManager', 'getConfiguredNetworks'), 
		('Landroid/net/sip/SipAudioCall', 'startAudio'), 
	],
	'android.permission.SEND_SMS':[
		('Landroid/telephony/gsm/SmsManager', 'sendTextMessage'), 
		('Landroid/telephony/SmsManager', 'sendMultipartTextMessage'), 
		('Landroid/telephony/gsm/SmsManager', 'sendDataMessage'), 
		('Landroid/telephony/SmsManager', 'sendTextMessage'), 
		('Landroid/telephony/gsm/SmsManager', 'sendMultipartTextMessage'), 
		('Landroid/telephony/SmsManager', 'sendDataMessage'), 
	],
	'android.permission.ACCESS_MOCK_LOCATION':[
		('Landroid/location/LocationManager', 'clearTestProviderLocation'), 
		('Landroid/location/LocationManager', 'clearTestProviderEnabled'), 
		('Landroid/location/LocationManager', 'addTestProvider'), 
		('Landroid/location/LocationManager', 'setTestProviderLocation'), 
		('Landroid/location/LocationManager', 'removeTestProvider'), 
		('Landroid/location/LocationManager', 'setTestProviderEnabled'), 
		('Landroid/location/LocationManager', 'clearTestProviderStatus'), 
		('Landroid/location/LocationManager', 'setTestProviderStatus'), 
	],
	'com.android.voicemail.permission.ADD_VOICEMAIL':[
		('Landroid/provider/CallLog$Calls', 'getLastOutgoingCall'), 
		('Landroid/provider/VoicemailContract$Status', 'buildSourceUri'), 
		('Landroid/provider/VoicemailContract$Voicemails', 'buildSourceUri'), 
	],
	'android.permission.BLUETOOTH_ADMIN':[
		('Landroid/media/AudioManager', 'setMode'), 
		('Landroid/bluetooth/BluetoothAdapter', 'enable'), 
		('Landroid/media/AudioManager', 'startBluetoothSco'), 
		('Landroid/bluetooth/BluetoothA2dp', 'isA2dpPlaying'), 
		('Landroid/bluetooth/BluetoothAdapter', 'startDiscovery'), 
		('Landroid/nfc/NfcAdapter', 'dispatch'), 
		('Landroid/bluetooth/BluetoothHeadset', 'getPriority'), 
		('Landroid/net/ConnectivityManager', 'startUsingNetworkFeature'), 
		('Landroid/bluetooth/BluetoothHeadset', 'stopVoiceRecognition'), 
		('Landroid/bluetooth/BluetoothHeadset', 'setPriority'), 
		('Landroid/bluetooth/BluetoothA2dp', 'disconnect'), 
		('Landroid/bluetooth/BluetoothHeadset', 'disconnect'), 
		('Landroid/bluetooth/BluetoothA2dp', 'setPriority'), 
		('Landroid/bluetooth/BluetoothHeadset', 'startVoiceRecognition'), 
		('Landroid/bluetooth/BluetoothHeadset', 'connect'), 
		('Landroid/media/AudioManager', 'stopBluetoothSco'), 
		('Landroid/bluetooth/BluetoothAdapter', 'setName'), 
		('Landroid/net/ConnectivityManager', 'setNetworkPreference'), 
		('Landroid/bluetooth/BluetoothA2dp', 'connect'), 
		('Landroid/net/ConnectivityManager', 'stopUsingNetworkFeature'), 
		('Landroid/bluetooth/BluetoothAdapter', 'cancelDiscovery'), 
		('Landroid/bluetooth/BluetoothAdapter', 'disable'), 
	],
	'android.permission.VIBRATE':[
		('Landroid/app/DownloadManager', 'getUriForDownloadedFile'), 
		('Landroid/app/NotificationManager', 'notify'), 
		('Landroid/os/Vibrator', 'vibrate'), 
		('Landroid/os/Vibrator', 'vibrate'), 
		('Landroid/app/DownloadManager', 'addCompletedDownload'), 
		('Landroid/app/DownloadManager', 'enqueue'), 
		('Landroid/app/NotificationManager', 'notify'), 
		('Landroid/os/Vibrator', 'cancel'), 
	],
	'android.permission.MODIFY_AUDIO_SETTINGS':[
		('Landroid/media/AudioManager', 'setMode'), 
		('Landroid/inputmethodservice/KeyboardView', 'onLongPress'), 
		('Landroid/media/AudioManager', 'startBluetoothSco'), 
		('Landroid/media/AudioManager', 'setSpeakerphoneOn'), 
		('Landroid/net/sip/SipAudioCall', 'setSpeakerMode'), 
		('Landroid/media/AudioManager', 'setBluetoothScoOn'), 
		('Landroid/media/AudioManager', 'setMicrophoneMute'), 
		('Landroid/media/AudioManager', 'setParameter'), 
		('Landroid/bluetooth/BluetoothHeadset', 'stopVoiceRecognition'), 
		('Landroid/app/KeyguardManager', 'exitKeyguardSecurely'), 
		('Landroid/media/AudioManager', 'isWiredHeadsetOn'), 
		('Landroid/inputmethodservice/KeyboardView', 'setKeyboard'), 
		('Landroid/inputmethodservice/KeyboardView', 'onTouchEvent'), 
		('Landroid/bluetooth/BluetoothHeadset', 'startVoiceRecognition'), 
		('Landroid/inputmethodservice/KeyboardView', 'onHoverEvent'), 
		('Landroid/media/AudioManager', 'stopBluetoothSco'), 
		('Landroid/media/AudioManager', 'setParameters'), 
		('Landroid/media/AudioManager', 'isBluetoothA2dpOn'), 
	],
	'android.permission.RESTART_PACKAGES':[
		('Landroid/app/ActivityManager', 'restartPackage'), 
		('Landroid/app/ActivityManager', 'killBackgroundProcesses'), 
	],
	'android.permission.ACCESS_COARSE_LOCATION':[
		('Landroid/location/LocationManager', 'requestLocationUpdates'), 
		('Landroid/location/LocationManager', 'getProviders'), 
		('Landroid/location/LocationManager', 'requestSingleUpdate'), 
		('Landroid/location/LocationManager', 'getProvider'), 
		('Landroid/location/LocationManager', 'getLastKnownLocation'), 
		('Landroid/location/LocationManager', 'isProviderEnabled'), 
		('Landroid/location/LocationManager', 'addProximityAlert'), 
		('Landroid/location/LocationManager', 'requestLocationUpdates'), 
		('Landroid/location/LocationManager', 'getBestProvider'), 
		('Landroid/telephony/TelephonyManager', 'getNeighboringCellInfo'), 
		('Landroid/telephony/TelephonyManager', 'getCellLocation'), 
		('Landroid/telephony/TelephonyManager', 'listen'), 
		('Landroid/location/LocationManager', 'getProviders'), 
		('Landroid/location/LocationManager', 'requestLocationUpdates'), 
		('Landroid/location/LocationManager', 'requestLocationUpdates'), 
		('Landroid/location/LocationManager', 'sendExtraCommand'), 
		('Landroid/location/LocationManager', 'requestSingleUpdate'), 
		('Landroid/location/LocationManager', 'requestSingleUpdate'), 
		('Landroid/location/LocationManager', 'requestSingleUpdate'), 
		('Landroid/location/LocationManager', 'requestLocationUpdates'), 
	],
	'android.permission.CHANGE_NETWORK_STATE':[
		('Landroid/net/ConnectivityManager', 'setNetworkPreference'), 
		('Landroid/net/ConnectivityManager', 'requestRouteToHost'), 
		('Landroid/net/ConnectivityManager', 'stopUsingNetworkFeature'), 
		('Landroid/net/ConnectivityManager', 'startUsingNetworkFeature'), 
	],
	'com.android.browser.permission.READ_HISTORY_BOOKMARKS':[
		('Landroid/provider/Browser', 'deleteFromHistory'), 
		('Landroid/provider/Browser', 'addSearchUrl'), 
		('Landroid/provider/Browser', 'getAllVisitedUrls'), 
		('Landroid/provider/Browser', 'canClearHistory'), 
		('Landroid/provider/Browser', 'updateVisitedHistory'), 
		('Landroid/provider/Browser', 'getVisitedHistory'), 
		('Landroid/provider/Browser', 'truncateHistory'), 
		('Landroid/provider/Browser', 'clearSearches'), 
		('Landroid/provider/Browser', 'clearHistory'), 
		('Landroid/provider/Browser', 'getAllBookmarks'), 
		('Landroid/provider/Browser', 'deleteHistoryTimeFrame'), 
	],
	'android.permission.READ_USER_DICTIONARY':[
		('Landroid/provider/UserDictionary$Words', 'addWord'), 
		('Landroid/provider/UserDictionary$Words', 'addWord'), 
	],
	'android.permission.WRITE_SETTINGS':[
		('Landroid/media/RingtoneManager', 'setActualDefaultRingtoneUri'), 
		('Landroid/provider/Settings$System', 'getUriFor'), 
		('Landroid/provider/Settings$System', 'setShowGTalkServiceStatus'), 
		('Landroid/net/wifi/WifiManager', 'setCountryCode'), 
		('Landroid/provider/Settings$Secure', 'putString'), 
		('Landroid/provider/Settings$Secure', 'putLong'), 
		('Landroid/provider/Settings$System', 'putLong'), 
		('Landroid/nfc/NfcAdapter', 'dispatch'), 
		('Landroid/provider/Settings$Secure', 'putInt'), 
		('Landroid/net/nsd/NsdManager', 'setEnabled'), 
		('Landroid/bluetooth/BluetoothHeadset', 'setPriority'), 
		('Landroid/provider/Settings$Secure', 'putFloat'), 
		('Landroid/provider/Settings$System', 'putInt'), 
		('Landroid/bluetooth/BluetoothA2dp', 'setPriority'), 
		('Landroid/provider/Settings$Secure', 'getUriFor'), 
		('Landroid/provider/Settings$System', 'putFloat'), 
		('Landroid/provider/Settings$System', 'putString'), 
		('Landroid/provider/Settings$System', 'putConfiguration'), 
		('Landroid/net/ConnectivityManager', 'setNetworkPreference'), 
		('Landroid/provider/Settings$Secure', 'setLocationProviderEnabled'), 
	],
	'android.permission.READ_CALENDAR':[
		('Landroid/provider/CalendarContract$Instances', 'query'), 
		('Landroid/provider/CalendarContract$CalendarAlerts', 'insert'), 
		('Landroid/provider/CalendarContract$EventDays', 'query'), 
		('Landroid/provider/CalendarContract$Instances', 'query'), 
		('Landroid/provider/CalendarContract$Attendees', 'query'), 
		('Landroid/provider/CalendarContract$Reminders', 'query'), 
	],
	'android.permission.CAMERA':[
		('Landroid/media/MediaRecorder', 'setVideoSource'), 
		('Landroid/hardware/Camera', 'open'), 
	],
	'android.permission.WRITE_USER_DICTIONARY':[
		('Landroid/provider/UserDictionary$Words', 'addWord'), 
		('Landroid/provider/UserDictionary$Words', 'addWord'), 
	],
	'android.permission.AUTHENTICATE_ACCOUNTS':[
		('Landroid/accounts/AccountManager', 'setUserData'), 
		('Landroid/accounts/AccountManager', 'setPassword'), 
		('Landroid/accounts/AccountManager', 'getPassword'), 
		('Landroid/accounts/AccountManager', 'addAccountExplicitly'), 
		('Landroid/accounts/AccountManager', 'peekAuthToken'), 
		('Landroid/accounts/AccountManager', 'getUserData'), 
		('Landroid/accounts/AccountManager', 'setAuthToken'), 
	],
	'android.permission.INTERNET':[
		('Landroid/app/DownloadManager', 'getUriForDownloadedFile'), 
		('Ljava/net/ServerSocket', 'bind'), 
		('Ljava/net/URL', 'openStream'), 
		('Ljava/net/URL', 'openConnection'), 
		('Ljava/net/URL', 'getContent'), 
		('Ljava/net/URLConnection', 'getInputStream'), 
		('Landroid/webkit/WebViewFragment', 'onCreateView'), 
		('Lorg/apache/http/impl/client/DefaultHttpClient', 'execute'), 
		('Landroid/net/nsd/NsdManager', 'init'), 
		('Landroid/app/DownloadManager', 'addCompletedDownload'), 
		('Landroid/app/DownloadManager', 'enqueue'), 
		('Ljava/net/URLConnection', 'connect'), 
		('Ljava/net/HttpURLConnection', 'connect'), 
	],
	'android.permission.SET_WALLPAPER':[
		('Landroid/content/ContextWrapper', 'setWallpaper'), 
		('Landroid/app/WallpaperManager', 'setBitmap'), 
		('Landroid/content/ContextWrapper', 'clearWallpaper'), 
		('Landroid/app/WallpaperManager', 'setStream'), 
		('Landroid/app/WallpaperManager', 'clear'), 
		('Landroid/content/Context', 'setWallpaper'), 
		('Landroid/content/Context', 'setWallpaper'), 
		('Landroid/content/Context', 'clearWallpaper'), 
		('Landroid/content/ContextWrapper', 'setWallpaper'), 
		('Landroid/app/WallpaperManager', 'setResource'), 
	],
	'com.android.browser.permission.WRITE_HISTORY_BOOKMARKS':[
		('Landroid/provider/Browser', 'truncateHistory'), 
		('Landroid/provider/Browser', 'deleteFromHistory'), 
		('Landroid/provider/Browser', 'addSearchUrl'), 
		('Landroid/provider/Browser', 'clearHistory'), 
		('Landroid/provider/Browser', 'clearSearches'), 
		('Landroid/provider/Browser', 'updateVisitedHistory'), 
		('Landroid/provider/Browser', 'deleteHistoryTimeFrame'), 
	],
	'android.permission.DISABLE_KEYGUARD':[
		('Landroid/app/KeyguardManager$KeyguardLock', 'reenableKeyguard'), 
		('Landroid/app/KeyguardManager$KeyguardLock', 'disableKeyguard'), 
		('Landroid/app/KeyguardManager', 'exitKeyguardSecurely'), 
	],
	'android.permission.WRITE_SOCIAL_STREAM':[
		('Landroid/provider/Contacts$People', 'markAsContacted'), 
		('Landroid/provider/Contacts$ContactMethods', 'addPostalLocation'), 
		('Landroid/provider/ContactsContract$ProfileSyncState', 'newSetOperation'), 
		('Landroid/provider/ContactsContract$SyncState', 'set'), 
		('Landroid/provider/ContactsContract$RawContacts', 'getContactLookupUri'), 
		('Landroid/provider/Contacts$People', 'createPersonInMyContactsGroup'), 
		('Landroid/provider/Contacts$People', 'addToGroup'), 
		('Landroid/provider/Contacts$People', 'addToMyContactsGroup'), 
		('Landroid/provider/Contacts$Settings', 'setSetting'), 
		('Landroid/provider/ContactsContract$SyncState', 'newSetOperation'), 
		('Landroid/provider/ContactsContract$Contacts', 'getLookupUri'), 
		('Landroid/provider/ContactsContract$Contacts', 'markAsContacted'), 
		('Landroid/provider/ContactsContract$Contacts', 'getLookupUri'), 
		('Landroid/provider/ContactsContract$ProfileSyncState', 'set'), 
		('Landroid/provider/Contacts$People', 'addToGroup'), 
		('Landroid/provider/ContactsContract$Directory', 'notifyDirectoryChange'), 
		('Landroid/provider/ContactsContract$Data', 'getContactLookupUri'), 
	],
	'android.permission.WRITE_EXTERNAL_STORAGE':[
		('Landroid/app/DownloadManager', 'getUriForDownloadedFile'), 
		('Landroid/app/DownloadManager', 'enqueue'), 
		('Landroid/app/DownloadManager', 'addCompletedDownload'), 
	],
	'android.permission.ACCESS_NETWORK_STATE':[
		('Landroid/net/ConnectivityManager', 'getNetworkInfo'), 
		('Landroid/net/ConnectivityManager', 'isActiveNetworkMetered'), 
		('Landroid/net/ConnectivityManager', 'getNetworkPreference'), 
		('Landroid/net/ConnectivityManager', 'setNetworkPreference'), 
		('Landroid/net/ConnectivityManager', 'getActiveNetworkInfo'), 
		('Landroid/net/ConnectivityManager', 'getAllNetworkInfo'), 
		('Landroid/net/ConnectivityManager', 'stopUsingNetworkFeature'), 
		('Landroid/net/ConnectivityManager', 'startUsingNetworkFeature'), 
	],
	'android.permission.REORDER_TASKS':[
		('Landroid/app/ActivityManager', 'moveTaskToFront'), 
		('Landroid/app/ActivityManager', 'moveTaskToFront'), 
	],
	'android.permission.WRITE_CALENDAR':[
		('Landroid/provider/CalendarContract$CalendarAlerts', 'insert'), 
	],
	'android.permission.GET_ACCOUNTS':[
		('Landroid/provider/Browser', 'deleteFromHistory'), 
		('Landroid/accounts/AccountManager', 'confirmCredentials'), 
		('Landroid/accounts/AccountManager', 'editProperties'), 
		('Landroid/accounts/AccountManager', 'getAuthToken'), 
		('Landroid/provider/Browser', 'updateVisitedHistory'), 
		('Landroid/accounts/AccountManager', 'getAuthToken'), 
		('Landroid/accounts/AccountManager', 'getAuthTokenByFeatures'), 
		('Landroid/accounts/AccountManager', 'addAccount'), 
		('Landroid/provider/Browser', 'truncateHistory'), 
		('Landroid/provider/Browser', 'clearSearches'), 
		('Landroid/accounts/AccountManager', 'getAccountsByTypeAndFeatures'), 
		('Landroid/accounts/AccountManager', 'addOnAccountsUpdatedListener'), 
		('Landroid/provider/Browser', 'deleteHistoryTimeFrame'), 
		('Landroid/app/KeyguardManager', 'exitKeyguardSecurely'), 
		('Landroid/provider/Browser', 'addSearchUrl'), 
		('Landroid/accounts/AccountManager', 'removeAccount'), 
		('Landroid/accounts/AccountManager', 'getAuthToken'), 
		('Landroid/accounts/AccountManager', 'getAccountsByType'), 
		('Landroid/accounts/AccountManager', 'getAuthTokenLabel'), 
		('Landroid/accounts/AccountManager', 'updateCredentials'), 
		('Landroid/provider/Browser', 'clearHistory'), 
		('Landroid/accounts/AccountManager', 'getAccounts'), 
		('Landroid/accounts/AccountManager', 'hasFeatures'), 
		('Landroid/accounts/AccountManager', 'blockingGetAuthToken'), 
	],
	'android.permission.READ_SYNC_STATS':[
		('Landroid/content/ContentResolver', 'isSyncActive'), 
		('Landroid/test/mock/MockContentResolver', 'isSyncActive'), 
		('Landroid/test/mock/MockContentResolver', 'isSyncPending'), 
		('Landroid/test/SyncBaseInstrumentation', 'syncProvider'), 
		('Landroid/content/ContentResolver', 'getCurrentSync'), 
		('Landroid/content/ContentResolver', 'getCurrentSyncs'), 
		('Landroid/test/mock/MockContentResolver', 'getCurrentSync'), 
		('Landroid/content/ContentResolver', 'isSyncPending'), 
		('Landroid/test/mock/MockContentResolver', 'getCurrentSyncs'), 
	],
	'android.permission.ACCESS_FINE_LOCATION':[
		('Landroid/location/LocationManager', 'requestLocationUpdates'), 
		('Landroid/location/LocationManager', 'getProviders'), 
		('Landroid/location/LocationManager', 'requestSingleUpdate'), 
		('Landroid/location/LocationManager', 'getProvider'), 
		('Landroid/location/LocationManager', 'getLastKnownLocation'), 
		('Landroid/location/LocationManager', 'isProviderEnabled'), 
		('Landroid/location/LocationManager', 'addProximityAlert'), 
		('Landroid/location/LocationManager', 'requestLocationUpdates'), 
		('Landroid/location/LocationManager', 'getBestProvider'), 
		('Landroid/telephony/TelephonyManager', 'getNeighboringCellInfo'), 
		('Landroid/telephony/TelephonyManager', 'getCellLocation'), 
		('Landroid/location/LocationManager', 'getProviders'), 
		('Landroid/location/LocationManager', 'requestLocationUpdates'), 
		('Landroid/location/LocationManager', 'requestLocationUpdates'), 
		('Landroid/location/LocationManager', 'sendExtraCommand'), 
		('Landroid/location/LocationManager', 'addNmeaListener'), 
		('Landroid/location/LocationManager', 'requestSingleUpdate'), 
		('Landroid/location/LocationManager', 'requestSingleUpdate'), 
		('Landroid/location/LocationManager', 'addGpsStatusListener'), 
		('Landroid/location/LocationManager', 'requestSingleUpdate'), 
		('Landroid/location/LocationManager', 'requestLocationUpdates'), 
	],
	'android.permission.USE_SIP':[
		('Landroid/net/sip/SipManager', 'getSessionFor'), 
		('Landroid/net/sip/SipManager', 'takeAudioCall'), 
		('Landroid/net/sip/SipManager', 'open'), 
		('Landroid/net/sip/SipManager', 'makeAudioCall'), 
		('Landroid/net/sip/SipManager', 'register'), 
		('Landroid/net/sip/SipManager', 'isOpened'), 
		('Landroid/net/sip/SipManager', 'isRegistered'), 
		('Landroid/net/sip/SipManager', 'open'), 
		('Landroid/net/sip/SipManager', 'unregister'), 
		('Landroid/net/sip/SipManager', 'makeAudioCall'), 
		('Landroid/net/sip/SipManager', 'close'), 
		('Landroid/net/sip/SipManager', 'setRegistrationListener'), 
		('Landroid/net/sip/SipManager', 'createSipSession'), 
	],
	'android.permission.USE_CREDENTIALS':[
		('Landroid/accounts/AccountManager', 'confirmCredentials'), 
		('Landroid/accounts/AccountManager', 'editProperties'), 
		('Landroid/accounts/AccountManager', 'getAuthToken'), 
		('Landroid/accounts/AccountManager', 'getAuthToken'), 
		('Landroid/accounts/AccountManager', 'getAuthToken'), 
		('Landroid/accounts/AccountManager', 'getAuthTokenByFeatures'), 
		('Landroid/accounts/AccountManager', 'addAccount'), 
		('Landroid/accounts/AccountManager', 'updateCredentials'), 
		('Landroid/accounts/AccountManager', 'invalidateAuthToken'), 
		('Landroid/accounts/AccountManager', 'blockingGetAuthToken'), 
		('Landroid/app/KeyguardManager', 'exitKeyguardSecurely'), 
	],
	'android.permission.SET_TIME_ZONE':[
		('Landroid/app/AlarmManager', 'setTimeZone'), 
	],
	'android.permission.WAKE_LOCK':[
		('Landroid/widget/VideoView', 'onKeyDown'), 
		('Landroid/net/sip/SipAudioCall', 'onError'), 
		('Landroid/net/sip/SipAudioCall', 'close'), 
		('Landroid/media/AsyncPlayer', 'stop'), 
		('Landroid/widget/VideoView', 'resume'), 
		('Landroid/media/RingtoneManager', 'stopPreviousRingtone'), 
		('Landroid/os/PowerManager$WakeLock', 'finalize'), 
		('Landroid/widget/VideoView', 'setVideoURI'), 
		('Landroid/media/RingtoneManager', 'getRingtone'), 
		('Landroid/net/sip/SipManager', 'close'), 
		('Landroid/media/Ringtone', 'setUri'), 
		('Landroid/media/MediaPlayer', 'stop'), 
		('Landroid/net/wifi/WifiManager$WifiLock', 'finalize'), 
		('Landroid/media/AsyncPlayer', 'play'), 
		('Landroid/net/sip/SipAudioCall', 'startAudio'), 
		('Landroid/view/View', 'startDrag'), 
		('Landroid/os/PowerManager$WakeLock', 'release'), 
		('Landroid/net/sip/SipManager', 'open'), 
		('Landroid/media/effect/EffectContext', 'release'), 
		('Landroid/widget/VideoView', 'setVideoPath'), 
		('Landroid/widget/VideoView', 'stopPlayback'), 
		('Landroid/media/MediaPlayer', 'start'), 
		('Landroid/bluetooth/BluetoothHeadset', 'startVoiceRecognition'), 
		('Landroid/widget/VideoView', 'suspend'), 
		('Landroid/widget/VideoView', 'pause'), 
		('Landroid/widget/VideoView', 'release'), 
		('Landroid/media/Ringtone', 'stop'), 
		('Landroid/os/PowerManager$WakeLock', 'acquire'), 
		('Landroid/media/RingtoneManager', 'getRingtone'), 
		('Landroid/media/MediaPlayer', 'setWakeMode'), 
		('Landroid/net/sip/SipAudioCall', 'close'), 
		('Landroid/media/Ringtone', 'setStreamType'), 
		('Landroid/os/PowerManager$WakeLock', 'acquire'), 
		('Landroid/net/wifi/WifiManager$WifiLock', 'release'), 
		('Landroid/net/wifi/WifiManager$WifiLock', 'acquire'), 
		('Landroid/widget/VideoView', 'start'), 
		('Landroid/media/MediaPlayer', 'pause'), 
		('Landroid/widget/VideoView', 'setVideoURI'), 
		('Landroid/media/Ringtone', 'play'), 
		('Landroid/os/Vibrator', 'vibrate'), 
		('Landroid/media/MediaPlayer', 'reset'), 
		('Landroid/media/RingtoneManager', 'getRingtone'), 
		('Landroid/os/PowerManager$WakeLock', 'release'), 
		('Landroid/media/MediaPlayer', 'release'), 
		('Landroid/net/sip/SipAudioCall', 'endCall'), 
	],
	'android.permission.READ_CONTACTS':[
		('Landroid/provider/Contacts$People', 'markAsContacted'), 
		('Landroid/provider/Contacts$ContactMethods', 'addPostalLocation'), 
		('Landroid/widget/QuickContactBadge', 'assignContactFromPhone'), 
		('Landroid/provider/ContactsContract$ProfileSyncState', 'get'), 
		('Landroid/provider/ContactsContract$ProfileSyncState', 'newSetOperation'), 
		('Landroid/provider/Contacts$People', 'queryGroups'), 
		('Landroid/provider/ContactsContract$SyncState', 'set'), 
		('Landroid/provider/ContactsContract$RawContacts', 'getContactLookupUri'), 
		('Landroid/provider/Contacts$People', 'createPersonInMyContactsGroup'), 
		('Landroid/provider/Contacts$People', 'addToGroup'), 
		('Landroid/provider/Contacts$People', 'addToMyContactsGroup'), 
		('Landroid/provider/Contacts$Settings', 'setSetting'), 
		('Landroid/provider/ContactsContract$SyncState', 'newSetOperation'), 
		('Landroid/provider/ContactsContract$SyncState', 'getWithUri'), 
		('Landroid/provider/ContactsContract$Contacts', 'getLookupUri'), 
		('Landroid/provider/ContactsContract$Contacts', 'markAsContacted'), 
		('Landroid/provider/ContactsContract$ProfileSyncState', 'getWithUri'), 
		('Landroid/widget/QuickContactBadge', 'onClick'), 
		('Landroid/provider/ContactsContract$SyncState', 'get'), 
		('Landroid/widget/QuickContactBadge', 'assignContactFromEmail'), 
		('Landroid/provider/ContactsContract$Contacts', 'getLookupUri'), 
		('Landroid/provider/ContactsContract$ProfileSyncState', 'set'), 
		('Landroid/provider/ContactsContract$Directory', 'notifyDirectoryChange'), 
		('Landroid/provider/Contacts$People', 'addToGroup'), 
		('Landroid/provider/Contacts$Settings', 'getSetting'), 
		('Landroid/provider/ContactsContract$Data', 'getContactLookupUri'), 
	],
	'android.permission.SET_WALLPAPER_HINTS':[
		('Landroid/app/WallpaperManager', 'suggestDesiredDimensions'), 
	],
	'android.permission.READ_SYNC_SETTINGS':[
		('Landroid/content/ContentResolver', 'getMasterSyncAutomatically'), 
		('Landroid/content/ContentResolver', 'getPeriodicSyncs'), 
		('Landroid/provider/Contacts$People', 'markAsContacted'), 
		('Landroid/provider/Contacts$ContactMethods', 'addPostalLocation'), 
		('Landroid/test/mock/MockContentResolver', 'getSyncAutomatically'), 
		('Landroid/provider/ContactsContract$ProfileSyncState', 'newSetOperation'), 
		('Landroid/provider/ContactsContract$SyncState', 'set'), 
		('Landroid/provider/ContactsContract$RawContacts', 'getContactLookupUri'), 
		('Landroid/provider/Contacts$People', 'createPersonInMyContactsGroup'), 
		('Landroid/provider/Contacts$People', 'addToGroup'), 
		('Landroid/provider/Contacts$People', 'addToMyContactsGroup'), 
		('Landroid/test/mock/MockContentResolver', 'getIsSyncable'), 
		('Landroid/provider/Contacts$Settings', 'setSetting'), 
		('Landroid/provider/ContactsContract$SyncState', 'newSetOperation'), 
		('Landroid/provider/ContactsContract$Contacts', 'getLookupUri'), 
		('Landroid/provider/ContactsContract$Contacts', 'markAsContacted'), 
		('Landroid/content/ContentResolver', 'getSyncAutomatically'), 
		('Landroid/provider/ContactsContract$Contacts', 'getLookupUri'), 
		('Landroid/test/mock/MockContentResolver', 'getMasterSyncAutomatically'), 
		('Landroid/provider/ContactsContract$ProfileSyncState', 'set'), 
		('Landroid/provider/ContactsContract$Directory', 'notifyDirectoryChange'), 
		('Landroid/provider/Contacts$People', 'addToGroup'), 
		('Landroid/test/mock/MockContentResolver', 'getPeriodicSyncs'), 
		('Landroid/content/ContentResolver', 'getIsSyncable'), 
		('Landroid/provider/ContactsContract$Data', 'getContactLookupUri'), 
	],
	'android.permission.WRITE_SYNC_SETTINGS':[
		('Landroid/test/mock/MockContentResolver', 'setIsSyncable'), 
		('Landroid/test/SyncBaseInstrumentation', 'cancelSyncsandDisableAutoSync'), 
		('Landroid/content/ContentResolver', 'addPeriodicSync'), 
		('Landroid/test/mock/MockContentResolver', 'setSyncAutomatically'), 
		('Landroid/content/ContentResolver', 'setSyncAutomatically'), 
		('Landroid/test/mock/MockContentResolver', 'addPeriodicSync'), 
		('Landroid/content/ContentResolver', 'setIsSyncable'), 
		('Landroid/test/mock/MockContentResolver', 'removePeriodicSync'), 
		('Landroid/content/ContentResolver', 'setMasterSyncAutomatically'), 
		('Landroid/content/ContentResolver', 'removePeriodicSync'), 
		('Landroid/test/mock/MockContentResolver', 'setMasterSyncAutomatically'), 
	],
	'android.permission.MANAGE_ACCOUNTS':[
		('Landroid/accounts/AccountManager', 'confirmCredentials'), 
		('Landroid/accounts/AccountManager', 'editProperties'), 
		('Landroid/accounts/AccountManager', 'getAuthToken'), 
		('Landroid/accounts/AccountManager', 'removeAccount'), 
		('Landroid/accounts/AccountManager', 'clearPassword'), 
		('Landroid/accounts/AccountManager', 'getAuthToken'), 
		('Landroid/accounts/AccountManager', 'getAuthTokenLabel'), 
		('Landroid/accounts/AccountManager', 'getAuthToken'), 
		('Landroid/accounts/AccountManager', 'getAuthTokenByFeatures'), 
		('Landroid/accounts/AccountManager', 'addAccount'), 
		('Landroid/accounts/AccountManager', 'updateCredentials'), 
		('Landroid/accounts/AccountManager', 'invalidateAuthToken'), 
		('Landroid/accounts/AccountManager', 'getAccountsByTypeAndFeatures'), 
		('Landroid/accounts/AccountManager', 'hasFeatures'), 
		('Landroid/accounts/AccountManager', 'blockingGetAuthToken'), 
		('Landroid/app/KeyguardManager', 'exitKeyguardSecurely'), 
	],
	'android.permission.BROADCAST_STICKY':[
		('Landroid/media/AudioManager', 'setMode'), 
		('Landroid/content/ContextWrapper', 'removeStickyBroadcast'), 
		('Landroid/content/Context', 'sendStickyBroadcast'), 
		('Landroid/media/AudioManager', 'startBluetoothSco'), 
		('Landroid/content/ContextWrapper', 'sendStickyOrderedBroadcast'), 
		('Landroid/content/Context', 'removeStickyBroadcast'), 
		('Landroid/media/AudioManager', 'stopBluetoothSco'), 
		('Landroid/content/ContextWrapper', 'sendStickyBroadcast'), 
		('Landroid/content/Context', 'sendStickyOrderedBroadcast'), 
	],
	'android.permission.ACCESS_LOCATION_EXTRA_COMMANDS':[
		('Landroid/location/LocationManager', 'sendExtraCommand'), 
	],
	'android.permission.READ_SOCIAL_STREAM':[
		('Landroid/provider/Contacts$People', 'markAsContacted'), 
		('Landroid/provider/Contacts$ContactMethods', 'addPostalLocation'), 
		('Landroid/widget/QuickContactBadge', 'assignContactFromPhone'), 
		('Landroid/provider/ContactsContract$ProfileSyncState', 'get'), 
		('Landroid/provider/ContactsContract$ProfileSyncState', 'newSetOperation'), 
		('Landroid/provider/Contacts$People', 'queryGroups'), 
		('Landroid/provider/ContactsContract$SyncState', 'set'), 
		('Landroid/provider/ContactsContract$RawContacts', 'getContactLookupUri'), 
		('Landroid/provider/Contacts$People', 'addToGroup'), 
		('Landroid/provider/Contacts$People', 'createPersonInMyContactsGroup'), 
		('Landroid/provider/Contacts$People', 'addToMyContactsGroup'), 
		('Landroid/provider/Contacts$Settings', 'setSetting'), 
		('Landroid/provider/ContactsContract$SyncState', 'getWithUri'), 
		('Landroid/provider/ContactsContract$SyncState', 'newSetOperation'), 
		('Landroid/provider/ContactsContract$Contacts', 'getLookupUri'), 
		('Landroid/provider/ContactsContract$Contacts', 'markAsContacted'), 
		('Landroid/provider/ContactsContract$ProfileSyncState', 'getWithUri'), 
		('Landroid/widget/QuickContactBadge', 'onClick'), 
		('Landroid/provider/ContactsContract$SyncState', 'get'), 
		('Landroid/widget/QuickContactBadge', 'assignContactFromEmail'), 
		('Landroid/provider/ContactsContract$Contacts', 'getLookupUri'), 
		('Landroid/provider/ContactsContract$ProfileSyncState', 'set'), 
		('Landroid/provider/Contacts$People', 'addToGroup'), 
		('Landroid/provider/ContactsContract$Directory', 'notifyDirectoryChange'), 
		('Landroid/provider/Contacts$Settings', 'getSetting'), 
		('Landroid/provider/ContactsContract$Data', 'getContactLookupUri'), 
	],
	'android.permission.READ_CALL_LOG':[
		('Landroid/provider/CallLog$Calls', 'getLastOutgoingCall'), 
	],
	'android.permission.KILL_BACKGROUND_PROCESSES':[
		('Landroid/app/ActivityManager', 'restartPackage'), 
		('Landroid/app/ActivityManager', 'killBackgroundProcesses'), 
	],
	'android.permission.BLUETOOTH':[
		('Landroid/bluetooth/BluetoothAdapter', 'getProfileConnectionState'), 
		('Landroid/bluetooth/BluetoothDevice', 'getName'), 
		('Landroid/bluetooth/BluetoothHeadset', 'getDevicesMatchingConnectionStates'), 
		('Landroid/bluetooth/BluetoothHeadset', 'getConnectedDevices'), 
		('Landroid/media/AudioManager', 'startBluetoothSco'), 
		('Landroid/bluetooth/BluetoothDevice', 'getBluetoothClass'), 
		('Landroid/bluetooth/BluetoothHealth', 'getConnectionState'), 
		('Landroid/bluetooth/BluetoothAdapter', 'getUuids'), 
		('Landroid/bluetooth/BluetoothHeadset', 'isAudioConnected'), 
		('Landroid/bluetooth/BluetoothA2dp', 'getConnectedDevices'), 
		('Landroid/bluetooth/BluetoothHealth', 'isEnabled'), 
		('Landroid/bluetooth/BluetoothA2dp', 'isEnabled'), 
		('Landroid/net/ConnectivityManager', 'startUsingNetworkFeature'), 
		('Landroid/bluetooth/BluetoothAdapter', 'getBondedDevices'), 
		('Landroid/bluetooth/BluetoothHeadset', 'stopVoiceRecognition'), 
		('Landroid/bluetooth/BluetoothDevice', 'fetchUuidsWithSdp'), 
		('Landroid/bluetooth/BluetoothHealth', 'unregisterAppConfiguration'), 
		('Landroid/bluetooth/BluetoothAdapter', 'listenUsingRfcommWithServiceRecord'), 
		('Landroid/bluetooth/BluetoothA2dp', 'disconnect'), 
		('Landroid/bluetooth/BluetoothA2dp', 'setPriority'), 
		('Landroid/bluetooth/BluetoothAdapter', 'getConnectionState'), 
		('Landroid/bluetooth/BluetoothHeadset', 'startVoiceRecognition'), 
		('Landroid/bluetooth/BluetoothHeadset', 'connect'), 
		('Landroid/bluetooth/BluetoothAdapter', 'isDiscovering'), 
		('Landroid/net/ConnectivityManager', 'setNetworkPreference'), 
		('Landroid/bluetooth/BluetoothAdapter', 'cancelDiscovery'), 
		('Landroid/bluetooth/BluetoothAdapter', 'isEnabled'), 
		('Landroid/bluetooth/BluetoothHealth', 'getConnectedDevices'), 
		('Landroid/bluetooth/BluetoothAdapter', 'getName'), 
		('Landroid/bluetooth/BluetoothA2dp', 'getDevicesMatchingConnectionStates'), 
		('Landroid/bluetooth/BluetoothA2dp', 'getPriority'), 
		('Landroid/bluetooth/BluetoothAdapter', 'getScanMode'), 
		('Landroid/media/AudioManager', 'setMode'), 
		('Landroid/bluetooth/BluetoothDevice', 'getUuids'), 
		('Landroid/bluetooth/BluetoothHeadset', 'isEnabled'), 
		('Landroid/bluetooth/BluetoothHealth', 'disconnectChannel'), 
		('Landroid/bluetooth/BluetoothHealth', 'getDevicesMatchingConnectionStates'), 
		('Landroid/bluetooth/BluetoothA2dp', 'isA2dpPlaying'), 
		('Landroid/bluetooth/BluetoothDevice', 'getBondState'), 
		('Landroid/bluetooth/BluetoothHealth', 'getMainChannelFd'), 
		('Landroid/bluetooth/BluetoothAdapter', 'startDiscovery'), 
		('Landroid/nfc/NfcAdapter', 'dispatch'), 
		('Landroid/bluetooth/BluetoothAdapter', 'getAddress'), 
		('Landroid/bluetooth/BluetoothHeadset', 'getPriority'), 
		('Landroid/bluetooth/BluetoothA2dp', 'getConnectionState'), 
		('Landroid/bluetooth/BluetoothAdapter', 'listenUsingInsecureRfcommWithServiceRecord'), 
		('Landroid/bluetooth/BluetoothHeadset', 'setPriority'), 
		('Landroid/bluetooth/BluetoothSocket', 'connect'), 
		('Landroid/bluetooth/BluetoothHeadset', 'disconnect'), 
		('Landroid/bluetooth/BluetoothAdapter', 'getState'), 
		('Landroid/bluetooth/BluetoothHeadset', 'getConnectionState'), 
		('Landroid/media/AudioManager', 'stopBluetoothSco'), 
		('Landroid/bluetooth/BluetoothAdapter', 'setName'), 
		('Landroid/bluetooth/BluetoothDevice', 'createRfcommSocketToServiceRecord'), 
		('Landroid/bluetooth/BluetoothDevice', 'createInsecureRfcommSocketToServiceRecord'), 
		('Landroid/bluetooth/BluetoothHealth', 'registerSinkAppConfiguration'), 
		('Landroid/bluetooth/BluetoothA2dp', 'connect'), 
		('Landroid/net/ConnectivityManager', 'stopUsingNetworkFeature'), 
		('Landroid/bluetooth/BluetoothHealth', 'connectChannelToSource'), 
	],
	'android.permission.RECORD_AUDIO':[
		('Landroid/speech/SpeechRecognizer', 'stopListening'), 
		('Landroid/speech/SpeechRecognizer', 'setRecognitionListener'), 
		('Landroid/speech/SpeechRecognizer', 'cancel'), 
		('Landroid/speech/SpeechRecognizer', 'startListening'), 
		('Landroid/media/MediaRecorder', 'setAudioSource'), 
	],
}